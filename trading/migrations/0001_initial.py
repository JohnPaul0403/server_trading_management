# Generated by Django 4.2.23 on 2025-06-15 06:02

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TradingAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_id', models.CharField(max_length=100, unique=True)),
                ('account_name', models.CharField(max_length=100)),
                ('alpaca_api_key', models.CharField(blank=True, max_length=200)),
                ('alpaca_secret_key', models.CharField(blank=True, max_length=200)),
                ('is_paper_trading', models.BooleanField(default=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sync', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trading_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trading_account',
            },
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_id', models.CharField(max_length=100, unique=True)),
                ('symbol', models.CharField(max_length=10)),
                ('side', models.CharField(choices=[('buy', 'Buy'), ('sell', 'Sell')], max_length=4)),
                ('quantity', models.DecimalField(decimal_places=6, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.000001'))])),
                ('price', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('filled_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('commission', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('profit_loss', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('status', models.CharField(choices=[('filled', 'Filled'), ('partially_filled', 'Partially Filled'), ('cancelled', 'Cancelled'), ('pending', 'Pending')], default='filled', max_length=20)),
                ('strategy', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('timestamp', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to='trading.tradingaccount')),
            ],
            options={
                'db_table': 'trading_trade',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_trades', models.IntegerField(default=0)),
                ('winning_trades', models.IntegerField(default=0)),
                ('losing_trades', models.IntegerField(default=0)),
                ('total_pnl', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('total_commission', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('largest_win', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('largest_loss', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('average_win', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('average_loss', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('win_rate', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=5)),
                ('profit_factor', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('sharpe_ratio', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('max_drawdown', models.DecimalField(decimal_places=4, default=Decimal('0.0000'), max_digits=10)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='performance', to='trading.tradingaccount')),
            ],
            options={
                'db_table': 'trading_performancemetrics',
            },
        ),
        migrations.CreateModel(
            name='DailyMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('portfolio_value', models.DecimalField(decimal_places=2, max_digits=15)),
                ('daily_pnl', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=15)),
                ('trades_count', models.IntegerField(default=0)),
                ('volume', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='daily_metrics', to='trading.tradingaccount')),
            ],
            options={
                'db_table': 'trading_dailymetrics',
                'ordering': ['-date'],
                'unique_together': {('account', 'date')},
            },
        ),
        migrations.CreateModel(
            name='AssetPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('symbol', models.CharField(max_length=10)),
                ('quantity', models.DecimalField(decimal_places=6, max_digits=15)),
                ('average_cost', models.DecimalField(decimal_places=2, max_digits=15)),
                ('current_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('market_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('unrealized_pnl', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='trading.tradingaccount')),
            ],
            options={
                'db_table': 'trading_assetposition',
                'unique_together': {('account', 'symbol')},
            },
        ),
    ]
